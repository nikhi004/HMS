/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { RoomUpdateManyWithoutHostelsInput } from "./RoomUpdateManyWithoutHostelsInput";
import { Type } from "class-transformer";
import { StaffUpdateManyWithoutHostelsInput } from "./StaffUpdateManyWithoutHostelsInput";
import { StudentUpdateManyWithoutHostelsInput } from "./StudentUpdateManyWithoutHostelsInput";
import { UserUpdateManyWithoutHostelsInput } from "./UserUpdateManyWithoutHostelsInput";

@InputType()
class HostelUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => RoomUpdateManyWithoutHostelsInput,
  })
  @ValidateNested()
  @Type(() => RoomUpdateManyWithoutHostelsInput)
  @IsOptional()
  @Field(() => RoomUpdateManyWithoutHostelsInput, {
    nullable: true,
  })
  rooms?: RoomUpdateManyWithoutHostelsInput;

  @ApiProperty({
    required: false,
    type: () => StaffUpdateManyWithoutHostelsInput,
  })
  @ValidateNested()
  @Type(() => StaffUpdateManyWithoutHostelsInput)
  @IsOptional()
  @Field(() => StaffUpdateManyWithoutHostelsInput, {
    nullable: true,
  })
  staffItems?: StaffUpdateManyWithoutHostelsInput;

  @ApiProperty({
    required: false,
    type: () => StudentUpdateManyWithoutHostelsInput,
  })
  @ValidateNested()
  @Type(() => StudentUpdateManyWithoutHostelsInput)
  @IsOptional()
  @Field(() => StudentUpdateManyWithoutHostelsInput, {
    nullable: true,
  })
  students?: StudentUpdateManyWithoutHostelsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutHostelsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutHostelsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutHostelsInput, {
    nullable: true,
  })
  users?: UserUpdateManyWithoutHostelsInput;
}

export { HostelUpdateInput as HostelUpdateInput };
